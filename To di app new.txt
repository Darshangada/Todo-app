import React, { useState } from 'react';

const FILTERS = {
  all: () => true,
  active: (todo) => !todo.completed,
  completed: (todo) => todo.completed,
};

export default function App() {
  const [todos, setTodos] = useState([]);
  const [input, setInput] = useState('');
  const [filter, setFilter] = useState('all');

  const addTodo = () => {
    if (!input.trim()) return;
    setTodos([...todos, { id: Date.now(), text: input.trim(), completed: false }]);
    setInput('');
  };

  const deleteTodo = (id) => {
    setTodos(todos.filter((todo) => todo.id !== id));
  };

  const toggleTodo = (id) => {
    setTodos(
      todos.map((todo) =>
        todo.id === id ? { ...todo, completed: !todo.completed } : todo
      )
    );
  };

  const filteredTodos = todos.filter(FILTERS[filter]);

  return (
    <div className="max-w-xl mx-auto mt-10 p-4 shadow-md bg-white rounded">
      <h1 className="text-2xl font-bold mb-4">üìù To-Do App</h1>
      
      <div className="flex gap-2 mb-4">
        <input
          type="text"
          value={input}
          onChange={(e) => setInput(e.target.value)}
          className="flex-1 border px-2 py-1 rounded"
          placeholder="Add a new task"
        />
        <button onClick={addTodo} className="bg-blue-500 text-white px-4 rounded">
          Add
        </button>
      </div>

      <div className="flex gap-2 mb-4">
        {Object.keys(FILTERS).map((key) => (
          <button
            key={key}
            onClick={() => setFilter(key)}
            className={`px-3 py-1 border rounded ${filter === key ? 'bg-blue-200' : ''}`}
          >
            {key.charAt(0).toUpperCase() + key.slice(1)}
          </button>
        ))}
      </div>

      <ul>
        {filteredTodos.map((todo) => (
          <li key={todo.id} className="flex justify-between items-center mb-2">
            <span
              onClick={() => toggleTodo(todo.id)}
              className={`cursor-pointer ${todo.completed ? 'line-through text-gray-400' : ''}`}
            >
              {todo.text}
            </span>
            <button onClick={() => deleteTodo(todo.id)} className="text-red-500">
            </button>
          </li>
        ))}
      </ul>

      {filteredTodos.length === 0 && <p className="text-gray-400">No tasks found.</p>}
    </div>
  );
}
